name: CICD Pipeline

on:
  push:
    branches:
      - 'development'
  pull_request:
    branches:
      - 'development'

jobs:
  run_tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js 20
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Installing libs
        run: npm install

      - name: Running tests
        run: npm run test

  build_docker_image:
    needs: run_tests

    if: github.ref == 'refs/heads/development'

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx (DOCKER CLI plugin)
        uses: docker/setup-buildx-action@v2

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/basic_cicd:latest

  create_infra:
    needs: build_docker_image
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: terraform

    steps:
      - uses: actions/checkout@v3

      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform version
        run: terraform --version

      - name: Create main.tf
        run: |
          mv main.model.tf main.tf
          sed -i "s|<BACKEND_HTTP_ADDRESS>|${{ secrets.BACKEND_HTTP_ADDRESS }}|g" main.tf

      - name: Terraform init
        run: terraform init

      - name: Terraform validate
        run: terraform validate

      - name: Terraform plan
        if: github.event_name == 'pull_request'

        run: terraform plan
